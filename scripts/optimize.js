const fs = require('fs').promises;
const path = require('path');
const { execSync } = require('child_process');

console.log('üöÄ –ù–∞—á–∏–Ω–∞—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–∞ ODDS...\n');

// 1. –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏
async function cleanupUnusedFiles() {
    console.log('üßπ –£–¥–∞–ª—è—é –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ–∞–π–ª—ã...');
    
    const filesToDelete = [
        '.DS_Store',
        'public/.DS_Store',
        'public/images/.DS_Store',
        'public/videos/.DS_Store',
        'public/fonts/.DS_Store',
        'public/fonts/font/.DS_Store',
        '_unused_files',
        'CLEANUP_SUMMARY.md',
        'LAYOUT_UPDATE_REPORT.md',
        'FINAL_LAYOUT_FIXES_REPORT.md'
    ];
    
    for (const filePath of filesToDelete) {
        try {
            const fullPath = path.join(process.cwd(), filePath);
            const stat = await fs.stat(fullPath);
            
            if (stat.isDirectory()) {
                await fs.rm(fullPath, { recursive: true, force: true });
                console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: ${filePath}`);
            } else {
                await fs.unlink(fullPath);
                console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${filePath}`);
            }
        } catch (error) {
            console.log(`   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: ${filePath} (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ —É–¥–∞–ª–µ–Ω)`);
        }
    }
}

// 2. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
async function analyzeImageUsage() {
    console.log('\nüì∏ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
    
    const imagesDir = path.join(process.cwd(), 'public/images');
    const images = await fs.readdir(imagesDir, { withFileTypes: true });
    const imageFiles = images
        .filter(item => item.isFile() && /\.(jpg|jpeg|png|svg|webp)$/i.test(item.name))
        .map(item => item.name);
    
    const usedImages = new Set();
    const srcDir = path.join(process.cwd(), 'src');
    
    // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∏—â–µ–º –≤—Å–µ JS —Ñ–∞–π–ª—ã
    async function findJSFiles(dir) {
        const files = [];
        const items = await fs.readdir(dir, { withFileTypes: true });
        
        for (const item of items) {
            const fullPath = path.join(dir, item.name);
            if (item.isDirectory()) {
                files.push(...await findJSFiles(fullPath));
            } else if (item.name.endsWith('.js')) {
                files.push(fullPath);
            }
        }
        return files;
    }
    
    const jsFiles = await findJSFiles(srcDir);
    
    // –ò—â–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–æ–¥–µ
    for (const jsFile of jsFiles) {
        const content = await fs.readFile(jsFile, 'utf-8');
        
        for (const imageName of imageFiles) {
            if (content.includes(imageName)) {
                usedImages.add(imageName);
            }
        }
    }
    
    const unusedImages = imageFiles.filter(img => !usedImages.has(img));
    
    console.log(`   üìä –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${imageFiles.length}`);
    console.log(`   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö: ${usedImages.size}`);
    console.log(`   ‚ùå –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö: ${unusedImages.length}`);
    
    if (unusedImages.length > 0) {
        console.log('   üóëÔ∏è  –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
        for (const img of unusedImages) {
            console.log(`      - ${img}`);
            // –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            try {
                await fs.unlink(path.join(imagesDir, img));
                console.log(`      ‚úÖ –£–¥–∞–ª–µ–Ω–æ: ${img}`);
            } catch (error) {
                console.log(`      ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${img}`);
            }
        }
    }
    
    return { total: imageFiles.length, used: usedImages.size, removed: unusedImages.length };
}

// 3. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async function optimizeImages() {
    console.log('\nüñºÔ∏è  –û–ø—Ç–∏–º–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ sharp
        execSync('npm list sharp', { stdio: 'ignore' });
        
        const imagesDir = path.join(process.cwd(), 'public/images');
        const images = await fs.readdir(imagesDir, { withFileTypes: true });
        const imageFiles = images
            .filter(item => item.isFile() && /\.(jpg|jpeg|png)$/i.test(item.name))
            .map(item => item.name);
        
        console.log(`   üì∑ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É—é ${imageFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...`);
        
        const sharp = require('sharp');
        let optimizedCount = 0;
        let totalSavings = 0;
        
        for (const imageName of imageFiles) {
            const imagePath = path.join(imagesDir, imageName);
            const tempPath = path.join(imagesDir, `temp_${imageName}`);
            
            try {
                const originalStat = await fs.stat(imagePath);
                const originalSize = originalStat.size;
                
                // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                if (imageName.toLowerCase().endsWith('.png')) {
                    await sharp(imagePath)
                        .png({ quality: 85, compressionLevel: 8 })
                        .toFile(tempPath);
                } else {
                    await sharp(imagePath)
                        .jpeg({ quality: 85, progressive: true })
                        .toFile(tempPath);
                }
                
                const optimizedStat = await fs.stat(tempPath);
                const optimizedSize = optimizedStat.size;
                
                // –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–∞–∑–º–µ—Ä —É–º–µ–Ω—å—à–∏–ª—Å—è
                if (optimizedSize < originalSize) {
                    await fs.unlink(imagePath);
                    await fs.rename(tempPath, imagePath);
                    
                    const savings = originalSize - optimizedSize;
                    const savingsPercent = ((savings / originalSize) * 100).toFixed(1);
                    
                    console.log(`      ‚úÖ ${imageName}: ${(originalSize/1024).toFixed(1)}KB ‚Üí ${(optimizedSize/1024).toFixed(1)}KB (-${savingsPercent}%)`);
                    
                    optimizedCount++;
                    totalSavings += savings;
                } else {
                    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –µ—Å–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–µ –¥–∞–ª–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                    await fs.unlink(tempPath);
                    console.log(`      ‚ö†Ô∏è  ${imageName}: –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–µ —É–ª—É—á—à–∏–ª–∞ —Ä–∞–∑–º–µ—Ä`);
                }
            } catch (error) {
                console.log(`      ‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ ${imageName}: ${error.message}`);
                try {
                    await fs.unlink(tempPath);
                } catch {}
            }
        }
        
        console.log(`   üìä –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ ${optimizedCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
        console.log(`   üíæ –û–±—â–∞—è —ç–∫–æ–Ω–æ–º–∏—è: ${(totalSavings/1024).toFixed(1)}KB`);
        
        return { optimized: optimizedCount, savings: totalSavings };
    } catch (error) {
        console.log('   ‚ö†Ô∏è  Sharp –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
        console.log('   üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ sharp –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: npm install sharp');
        return { optimized: 0, savings: 0 };
    }
}

// 4. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
async function analyzeDependencies() {
    console.log('\nüì¶ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...');
    
    const packageJsonPath = path.join(process.cwd(), 'package.json');
    const packageJson = JSON.parse(await fs.readFile(packageJsonPath, 'utf-8'));
    
    const dependencies = { ...packageJson.dependencies, ...packageJson.devDependencies };
    const totalDeps = Object.keys(dependencies).length;
    
    console.log(`   üìä –í—Å–µ–≥–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: ${totalDeps}`);
    
    // –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
    const coreDependencies = [
        'next', 'react', 'react-dom',
        'tailwindcss', 'framer-motion',
        '@react-three/fiber', '@react-three/drei', 'three',
        'react-type-animation', 'lucide-react'
    ];
    
    const installedCore = coreDependencies.filter(dep => dependencies[dep]);
    console.log(`   ‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (${installedCore.length}): ${installedCore.join(', ')}`);
    
    return { total: totalDeps, core: installedCore.length };
}

// 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Next.js –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
async function optimizeNextConfig() {
    console.log('\n‚öôÔ∏è  –û–ø—Ç–∏–º–∏–∑–∏—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Next.js...');
    
    const nextConfigPath = path.join(process.cwd(), 'next.config.mjs');
    
    const optimizedConfig = `/** @type {import('next').NextConfig} */
const nextConfig = {
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    reactStrictMode: true,
    swcMinify: true,
    
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    images: {
        formats: ['image/webp', 'image/avif'],
        minimumCacheTTL: 31536000, // 1 –≥–æ–¥
        dangerouslyAllowSVG: true,
        contentDispositionType: 'attachment',
        contentSecurityPolicy: "default-src 'self'; script-src 'none'; sandbox;",
    },
    
    // –°–∂–∞—Ç–∏–µ
    compress: true,
    
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞–Ω–¥–ª–∞
    experimental: {
        optimizeCss: true,
        optimizePackageImports: ['lucide-react', '@react-three/drei'],
    },
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
    async headers() {
        return [
            {
                source: '/images/:path*',
                headers: [
                    {
                        key: 'Cache-Control',
                        value: 'public, max-age=31536000, immutable',
                    },
                ],
            },
            {
                source: '/videos/:path*',
                headers: [
                    {
                        key: 'Cache-Control',
                        value: 'public, max-age=31536000, immutable',
                    },
                ],
            },
            {
                source: '/fonts/:path*',
                headers: [
                    {
                        key: 'Cache-Control',
                        value: 'public, max-age=31536000, immutable',
                    },
                ],
            },
        ];
    },
    
    // Webpack –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    webpack: (config, { dev, isServer }) => {
        if (!dev && !isServer) {
            // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –±–∞–Ω–¥–ª–∞
            config.optimization.splitChunks = {
                chunks: 'all',
                cacheGroups: {
                    vendor: {
                        test: /[\\\\/]node_modules[\\\\/]/,
                        name: 'vendors',
                        chunks: 'all',
                    },
                    three: {
                        test: /[\\\\/]node_modules[\\\\/](three|@react-three)[\\\\/]/,
                        name: 'three',
                        chunks: 'all',
                    },
                },
            };
        }
        return config;
    },
};

export default nextConfig;
`;
    
    await fs.writeFile(nextConfigPath, optimizedConfig);
    console.log('   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Next.js –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
}

// 6. –°–æ–∑–¥–∞–µ–º .env.production
async function createProductionEnv() {
    console.log('\nüåç –°–æ–∑–¥–∞—é —Ñ–∞–π–ª –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞...');
    
    const envContent = `# Production environment variables
NODE_ENV=production
NEXT_TELEMETRY_DISABLED=1

# Performance optimizations
NEXT_PRIVATE_STANDALONE=true
`;
    
    await fs.writeFile('.env.production', envContent);
    console.log('   ‚úÖ –§–∞–π–ª .env.production —Å–æ–∑–¥–∞–Ω');
}

// 7. –û–±–Ω–æ–≤–ª—è–µ–º package.json —Å–∫—Ä–∏–ø—Ç—ã
async function updatePackageScripts() {
    console.log('\nüìú –û–±–Ω–æ–≤–ª—è—é —Å–∫—Ä–∏–ø—Ç—ã –≤ package.json...');
    
    const packageJsonPath = path.join(process.cwd(), 'package.json');
    const packageJson = JSON.parse(await fs.readFile(packageJsonPath, 'utf-8'));
    
    packageJson.scripts = {
        ...packageJson.scripts,
        "build:production": "cross-env NODE_ENV=production next build",
        "start:production": "cross-env NODE_ENV=production next start",
        "analyze": "cross-env ANALYZE=true next build",
        "optimize": "node scripts/optimize.js"
    };
    
    await fs.writeFile(packageJsonPath, JSON.stringify(packageJson, null, 2));
    console.log('   ‚úÖ –°–∫—Ä–∏–ø—Ç—ã package.json –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
    try {
        const startTime = Date.now();
        
        await cleanupUnusedFiles();
        const imageStats = await analyzeImageUsage();
        const optimizationStats = await optimizeImages();
        const depStats = await analyzeDependencies();
        await optimizeNextConfig();
        await createProductionEnv();
        await updatePackageScripts();
        
        const endTime = Date.now();
        const duration = ((endTime - startTime) / 1000).toFixed(2);
        
        console.log('\n‚ú® –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        console.log('\nüìä –°–≤–æ–¥–∫–∞:');
        console.log(`   ‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration}s`);
        console.log(`   üñºÔ∏è  –£–¥–∞–ª–µ–Ω–æ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${imageStats.removed}`);
        console.log(`   üì∏ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${optimizationStats.optimized}`);
        console.log(`   üíæ –≠–∫–æ–Ω–æ–º–∏—è –º–µ—Å—Ç–∞: ${(optimizationStats.savings/1024).toFixed(1)}KB`);
        console.log(`   üì¶ –í—Å–µ–≥–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: ${depStats.total}`);
        
        console.log('\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é!');
        console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
        console.log('   1. npm run build:production');
        console.log('   2. –î–µ–ø–ª–æ–π –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥ (Vercel, Netlify, etc.)');
        console.log('   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å –ø–æ–º–æ—â—å—é npm run analyze');
        
    } catch (error) {
        console.error('\n‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:', error);
        process.exit(1);
    }
}

main();

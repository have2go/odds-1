const fs = require('fs');
const path = require('path');

console.log('üöÄ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ ODDS...\n');

// –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ–∞–π–ª—ã
function deleteFileOrDir(filepath) {
    try {
        if (fs.existsSync(filepath)) {
            const stat = fs.statSync(filepath);
            if (stat.isDirectory()) {
                fs.rmSync(filepath, { recursive: true, force: true });
                console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: ${filepath}`);
            } else {
                fs.unlinkSync(filepath);
                console.log(`‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${filepath}`);
            }
            return true;
        }
    } catch (error) {
        console.log(`‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: ${filepath}`);
        return false;
    }
    return false;
}

// 1. –£–¥–∞–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã
console.log('üßπ –£–¥–∞–ª—è—é —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã...');
const systemFiles = [
    '.DS_Store',
    'public/.DS_Store', 
    'public/images/.DS_Store',
    'public/videos/.DS_Store',
    'public/fonts/.DS_Store',
    'public/fonts/font/.DS_Store'
];

systemFiles.forEach(deleteFileOrDir);

// 2. –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞–ø–∫–∏
console.log('\nüóÇÔ∏è  –£–¥–∞–ª—è—é –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞–ø–∫–∏...');
const unusedDirs = [
    '_unused_files',
];

unusedDirs.forEach(deleteFileOrDir);

// 3. –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
console.log('\nüìÑ –£–¥–∞–ª—è—é –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...');
const docFiles = [
    'CLEANUP_SUMMARY.md',
    'LAYOUT_UPDATE_REPORT.md', 
    'FINAL_LAYOUT_FIXES_REPORT.md'
];

docFiles.forEach(deleteFileOrDir);

// 4. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
console.log('\nüì∏ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');

const usedImages = new Set([
    // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ articlesData.js
    'remove-debris-cover.jpeg',
    'remove-debris-dialog.jpeg',
    'laserboom.jpg',
    'astroscale-cover.jpg',
    'astroscale-dialog.png',
    'clearspace.jpg',
    
    // –§–æ–Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    'bg-main.png',
    'bg-main-dark.png',
    'bg-problem.png',
    'bg-gravity.jpg',
    'bg-gorkaviy.jpg',
    
    // –°—Ç–∞–Ω—Ü–∏–∏ –∏ –º–æ–¥–µ–ª–∏
    'station.png',
    'station-clean.png',
    'station-frontal.png',
    'station-frontal-2.png',
    
    // –ü—Ä–æ–±–ª–µ–º—ã –∏ –æ—à–∏–±–∫–∏
    'failure-1.png',
    'failure-2.png', 
    'failure-3.png',
    'failure-4.png',
    'kessler-syndrome.jpg',
    'shadow.png',
    'shadow-problem.png',
    
    // –õ—è–≥—É—à–∫–∞ (–ª–æ–≥–æ—Ç–∏–ø/–º–∞—Å–∫–æ—Ç)
    'frog.png',
    'frog-compact.png'
]);

const imagesDir = 'public/images';
if (fs.existsSync(imagesDir)) {
    const allImages = fs.readdirSync(imagesDir).filter(file => 
        /\.(jpg|jpeg|png|svg|webp)$/i.test(file)
    );
    
    const unusedImages = allImages.filter(img => !usedImages.has(img));
    
    console.log(`   üìä –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${allImages.length}`);
    console.log(`   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö: ${usedImages.size}`);
    console.log(`   ‚ùå –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö: ${unusedImages.length}`);
    
    if (unusedImages.length > 0) {
        console.log('   üóëÔ∏è  –£–¥–∞–ª—è—é –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
        unusedImages.forEach(img => {
            const imgPath = path.join(imagesDir, img);
            if (deleteFileOrDir(imgPath)) {
                console.log(`      - ${img}`);
            }
        });
    }
}

// 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–µ–æ
console.log('\nüé¨ –ü—Ä–æ–≤–µ—Ä—è—é –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã...');
const videosDir = 'public/videos';
if (fs.existsSync(videosDir)) {
    const videos = fs.readdirSync(videosDir).filter(file => 
        /\.(mp4|webm|mov)$/i.test(file)
    );
    console.log(`   üìπ –ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤: ${videos.length}`);
    videos.forEach(video => console.log(`      - ${video}`));
}

// 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏
console.log('\nüéØ –ü—Ä–æ–≤–µ—Ä—è—é 3D –º–æ–¥–µ–ª–∏...');
const modelsDir = 'public/models';
if (fs.existsSync(modelsDir)) {
    const models = fs.readdirSync(modelsDir);
    console.log(`   üîß –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: ${models.length}`);
    models.forEach(model => console.log(`      - ${model}`));
}

// 7. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç—ã
console.log('\nüî§ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —à—Ä–∏—Ñ—Ç—ã...');
const fontsDir = 'public/fonts';
if (fs.existsSync(fontsDir)) {
    const sfProDir = path.join(fontsDir, 'San Francisco Pro Display');
    const magistralDir = path.join(fontsDir, 'font');
    
    if (fs.existsSync(sfProDir)) {
        const sfProFonts = fs.readdirSync(sfProDir).filter(f => f.endsWith('.otf'));
        console.log(`   üìù SF Pro —à—Ä–∏—Ñ—Ç—ã: ${sfProFonts.length} —Ñ–∞–π–ª–æ–≤`);
    }
    
    if (fs.existsSync(magistralDir)) {
        const magistralFonts = fs.readdirSync(magistralDir).filter(f => 
            f.endsWith('.woff') || f.endsWith('.woff2') || f.endsWith('.ttf')
        );
        console.log(`   üìù Magistral —à—Ä–∏—Ñ—Ç—ã: ${magistralFonts.length} —Ñ–∞–π–ª–æ–≤`);
        
        // –£–¥–∞–ª—è–µ–º .eot —Ñ–∞–π–ª—ã (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π —Ñ–æ—Ä–º–∞—Ç)
        const eotFiles = fs.readdirSync(magistralDir).filter(f => f.endsWith('.eot'));
        console.log(`   üóëÔ∏è  –£–¥–∞–ª—è—é —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ .eot —Ñ–∞–π–ª—ã: ${eotFiles.length}`);
        eotFiles.forEach(eot => {
            deleteFileOrDir(path.join(magistralDir, eot));
        });
    }
}

// 8. –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∞—Å—Å–µ—Ç–æ–≤
console.log('\nüìã –°–æ–∑–¥–∞—é –º–∞–Ω–∏—Ñ–µ—Å—Ç –∞—Å—Å–µ—Ç–æ–≤...');
const manifest = {
    images: Array.from(usedImages),
    videos: ['bg-main.mp4', 'debris.mp4'],
    models: ['Timur FROG test.obj'],
    fonts: {
        'SF Pro Display': '–û—Å–Ω–æ–≤–Ω–æ–π —à—Ä–∏—Ñ—Ç UI',
        'Magistral': '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —à—Ä–∏—Ñ—Ç (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)'
    },
    generated: new Date().toISOString()
};

fs.writeFileSync('assets-manifest.json', JSON.stringify(manifest, null, 2));
console.log('   ‚úÖ –ú–∞–Ω–∏—Ñ–µ—Å—Ç —Å–æ–∑–¥–∞–Ω: assets-manifest.json');

// 9. –û–±–Ω–æ–≤–ª—è–µ–º .gitignore
console.log('\nüìù –û–±–Ω–æ–≤–ª—è—é .gitignore...');
const gitignoreAdditions = `
# Optimization artifacts
*.webp.backup
*.jpg.backup
*.png.backup
/scripts/temp/
assets-manifest.json

# Bundle analyzer
.webpack-bundle-analyzer/
`;

if (fs.existsSync('.gitignore')) {
    const gitignore = fs.readFileSync('.gitignore', 'utf8');
    if (!gitignore.includes('assets-manifest.json')) {
        fs.appendFileSync('.gitignore', gitignoreAdditions);
        console.log('   ‚úÖ .gitignore –æ–±–Ω–æ–≤–ª–µ–Ω');
    } else {
        console.log('   ‚úÖ .gitignore —É–∂–µ –∞–∫—Ç—É–∞–ª–µ–Ω');
    }
}

console.log('\n‚ú® –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:');
console.log(`   üñºÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${usedImages.size}`);
console.log(`   üé¨ –í–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤: 2`);
console.log(`   üéØ 3D –º–æ–¥–µ–ª–µ–π: 1`);
console.log(`   üî§ –°–µ–º–µ–π—Å—Ç–≤ —à—Ä–∏—Ñ—Ç–æ–≤: 2`);

console.log('\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('   1. npm run build:production');
console.log('   2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑–º–µ—Ä: npm run analyze-bundle');
console.log('   3. –î–µ–ø–ª–æ–π –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É');

console.log('\nüí° –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:');
console.log('   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ sharp: npm install sharp');
console.log('   - –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ WebP/AVIF');
console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ CDN –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∞—Å—Å–µ—Ç–æ–≤');

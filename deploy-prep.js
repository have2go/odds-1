#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ ODDS –∫ –¥–µ–ø–ª–æ—é\n');

let changes = 0;

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞/–ø–∞–ø–∫–∏
function removeItem(itemPath) {
    try {
        if (fs.existsSync(itemPath)) {
            const stat = fs.statSync(itemPath);
            if (stat.isDirectory()) {
                fs.rmSync(itemPath, { recursive: true, force: true });
                console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: ${itemPath}`);
            } else {
                fs.unlinkSync(itemPath);
                console.log(`‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${itemPath}`);
            }
            changes++;
            return true;
        }
    } catch (error) {
        console.log(`‚ö†Ô∏è  –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${itemPath}`);
    }
    return false;
}

// 1. –£–¥–∞–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã
console.log('1Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');
const systemFiles = [
    '.DS_Store',
    'public/.DS_Store',
    'public/images/.DS_Store',
    'public/videos/.DS_Store',
    'public/fonts/.DS_Store',
    'public/fonts/font/.DS_Store'
];
systemFiles.forEach(removeItem);

// 2. –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞–ø–∫–∏
console.log('\n2Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –ø–∞–ø–æ–∫...');
const unusedDirs = ['_unused_files'];
unusedDirs.forEach(removeItem);

// 3. –£–¥–∞–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
console.log('\n3Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...');
const devDocs = [
    'CLEANUP_SUMMARY.md',
    'LAYOUT_UPDATE_REPORT.md',
    'FINAL_LAYOUT_FIXES_REPORT.md'
];
devDocs.forEach(removeItem);

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ Next.js –∫–æ–Ω—Ñ–∏–≥–∞
if (fs.existsSync('next.config.mjs')) {
    const config = fs.readFileSync('next.config.mjs', 'utf8');
    if (config.includes('swcMinify: true')) {
        console.log('‚úÖ Next.js –∫–æ–Ω—Ñ–∏–≥ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } else {
        console.log('‚ö†Ô∏è  Next.js –∫–æ–Ω—Ñ–∏–≥ —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
    }
} else {
    console.log('‚ùå next.config.mjs –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ .env.production
if (fs.existsSync('.env.production')) {
    console.log('‚úÖ Production env –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
} else {
    console.log('‚ö†Ô∏è  .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

// 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json —Å–∫—Ä–∏–ø—Ç—ã
console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤...');
if (fs.existsSync('package.json')) {
    const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    const hasOptimizedScripts = pkg.scripts && pkg.scripts['build:production'];
    if (hasOptimizedScripts) {
        console.log('‚úÖ –°–∫—Ä–∏–ø—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    } else {
        console.log('‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç—ã —Ç—Ä–µ–±—É—é—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
    }
}

// 6. –ê–Ω–∞–ª–∏–∑ –∞—Å—Å–µ—Ç–æ–≤
console.log('\n6Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –∞—Å—Å–µ—Ç–æ–≤...');

function getDirectorySize(dirPath) {
    let size = 0;
    try {
        const files = fs.readdirSync(dirPath);
        for (const file of files) {
            const filePath = path.join(dirPath, file);
            const stat = fs.statSync(filePath);
            if (stat.isFile()) {
                size += stat.size;
            } else if (stat.isDirectory()) {
                size += getDirectorySize(filePath);
            }
        }
    } catch (error) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    }
    return size;
}

function formatBytes(bytes) {
    if (bytes === 0) return '0 B';
    const k = 1024;
    const sizes = ['B', 'KB', 'MB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(1))} ${sizes[i]}`;
}

const assetsAnalysis = {
    images: { dir: 'public/images', size: 0, count: 0 },
    videos: { dir: 'public/videos', size: 0, count: 0 },
    fonts: { dir: 'public/fonts', size: 0, count: 0 }
};

Object.keys(assetsAnalysis).forEach(type => {
    const { dir } = assetsAnalysis[type];
    if (fs.existsSync(dir)) {
        assetsAnalysis[type].size = getDirectorySize(dir);
        assetsAnalysis[type].count = fs.readdirSync(dir).length;
        console.log(`   ${type}: ${formatBytes(assetsAnalysis[type].size)} (${assetsAnalysis[type].count} —Ñ–∞–π–ª–æ–≤)`);
    }
});

const totalAssetsSize = Object.values(assetsAnalysis).reduce((sum, asset) => sum + asset.size, 0);
console.log(`   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –∞—Å—Å–µ—Ç–æ–≤: ${formatBytes(totalAssetsSize)}`);

// 7. –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
console.log('\n7Ô∏è‚É£ –û—Ç—á–µ—Ç –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é...');

const readinessChecks = [
    { name: '–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã', status: !fs.existsSync('.DS_Store') },
    { name: '–ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞–ø–∫–∏ —É–¥–∞–ª–µ–Ω—ã', status: !fs.existsSync('_unused_files') },
    { name: 'Next.js –∫–æ–Ω—Ñ–∏–≥ –µ—Å—Ç—å', status: fs.existsSync('next.config.mjs') },
    { name: 'Production env –µ—Å—Ç—å', status: fs.existsSync('.env.production') },
    { name: '–ê—Å—Å–µ—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã', status: totalAssetsSize > 0 }
];

let readyCount = 0;
readinessChecks.forEach(check => {
    const icon = check.status ? '‚úÖ' : '‚ùå';
    console.log(`   ${icon} ${check.name}`);
    if (check.status) readyCount++;
});

const readinessPercent = Math.round((readyCount / readinessChecks.length) * 100);
console.log(`\nüìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: ${readinessPercent}% (${readyCount}/${readinessChecks.length})`);

// 8. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–µ–ø–ª–æ—é
console.log('\n8Ô∏è‚É£ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');

if (readinessPercent >= 80) {
    console.log('üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é!');
    console.log('\nüìã –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–µ–ø–ª–æ—è:');
    console.log('   npm install sharp cross-env  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä—ã');
    console.log('   npm run build:production    # –°–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞');
    console.log('   npm run start:production    # –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)');
    
    console.log('\nüåê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:');
    console.log('   ‚Ä¢ Vercel (vercel --prod)');
    console.log('   ‚Ä¢ Netlify (–ø–æ–¥–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ Git)');
    console.log('   ‚Ä¢ Railway, Render, –∏–ª–∏ DigitalOcean');
    
} else {
    console.log('‚ö†Ô∏è  –¢—Ä–µ–±—É—é—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
    
    if (!fs.existsSync('next.config.mjs')) {
        console.log('   - –°–æ–∑–¥–∞—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π next.config.mjs');
    }
    if (!fs.existsSync('.env.production')) {
        console.log('   - –°–æ–∑–¥–∞—Ç—å .env.production —Ñ–∞–π–ª');
    }
}

console.log('\nüí° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã:');
console.log(`   - –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤/–ø–∞–ø–æ–∫: ${changes}`);
console.log(`   - –†–∞–∑–º–µ—Ä –∞—Å—Å–µ—Ç–æ–≤: ${formatBytes(totalAssetsSize)}`);
console.log('   - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã');

console.log('\n‚ú® –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
